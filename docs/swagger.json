{
    "swagger": "2.0",
    "info": {
        "description": "This is API for Milk Kitchen requests",
        "title": "DevIntApp",
        "contact": {},
        "version": "1.1"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/login_user": {
            "post": {
                "description": "Authenticates a user and returns a JWT token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Login a user",
                "parameters": [
                    {
                        "description": "User login data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.LoginUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "description": "Log out the user by blacklisting the token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Logout",
                "parameters": [
                    {
                        "description": "User login data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.LogoutUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Missing token",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/api/meal": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create meal with properties",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meals"
                ],
                "summary": "Create meal",
                "parameters": [
                    {
                        "description": "Meal data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateMealRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateMealResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/api/meal/change_pic/{ID}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete meal using it's ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meals"
                ],
                "summary": "Change picture By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Meal ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "File",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Picture was changed sucessfully",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/api/meal/{ID}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get info about meal using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meals"
                ],
                "summary": "Get meal by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Meal ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.GetMealResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update meal using it's ID with parametres",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meals"
                ],
                "summary": "Update meal by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Meal ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update meal data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateMealRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateMealResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete meal using it's ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meals"
                ],
                "summary": "Delete meal by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Meal ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.DeleteMealResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/api/meal_to_milk_request/{ID}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This endpoint allows you to add a meal to a milk request by it's ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meals"
                ],
                "summary": "Add meal to milk request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Meal ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Meal added successfully",
                        "schema": {
                            "$ref": "#/definitions/schemas.AddMealToMilkReqResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/api/meals": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a list of all meals.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meals"
                ],
                "summary": "Get all meals",
                "responses": {
                    "200": {
                        "description": "List of meals retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/schemas.GetAllMealsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/api/milk_req_meals/{ID}": {
            "put": {
                "description": "Обновляет количество продукта в конкретной заявке",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meals_and_requests"
                ],
                "summary": "Обновить количество продуктов в заявке",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Milk request ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update amount meals in milk request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateAmountMilkReqMealRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Meal was deleted from milk request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет блюдо из запроса на молоко по ID запроса и MealID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meals_and_requests"
                ],
                "summary": "Удалить блюдо из запроса на молоко",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID заявки",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Delete meal from meal request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.DeleteMealFromMilkReqRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Meal was deleted from milk request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/api/milk_requests": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получить список запросов на молоко с возможностью фильтрации по статусу и датам",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "milk_requests"
                ],
                "summary": "Получить все заявки на молочную кухню с параметрами",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Статус заявки",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Наличие статуса",
                        "name": "is_status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.GetAllMilkRequestsWithParamsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/api/register_user": {
            "post": {
                "description": "Registers a new user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.RegisterUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "409": {
                        "description": "User with this login already exists",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ResponseMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ds.Meals": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "meal_brand": {
                    "type": "string"
                },
                "meal_detail": {
                    "type": "string"
                },
                "meal_info": {
                    "type": "string"
                },
                "meal_weight": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "ds.MilkRequests": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "creator": {
                    "$ref": "#/definitions/ds.Users"
                },
                "creator_id": {
                    "type": "integer"
                },
                "date_create": {
                    "type": "string"
                },
                "date_finish": {
                    "type": "string"
                },
                "date_update": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "moderator": {
                    "$ref": "#/definitions/ds.Users"
                },
                "moderator_id": {
                    "type": "integer"
                },
                "recipient_name": {
                    "type": "string"
                },
                "recipient_surname": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "ds.Users": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "is_moderator": {
                    "type": "boolean"
                },
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "schemas.AddMealToMilkReqResponse": {
            "type": "object",
            "properties": {
                "mealID": {
                    "type": "integer"
                },
                "messageResponse": {
                    "type": "string"
                },
                "milkRequestID": {
                    "type": "integer"
                }
            }
        },
        "schemas.CreateMealRequest": {
            "type": "object",
            "properties": {
                "image_url": {
                    "type": "string"
                },
                "meal_brand": {
                    "type": "string"
                },
                "meal_detail": {
                    "type": "string"
                },
                "meal_info": {
                    "type": "string"
                },
                "meal_weight": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "schemas.CreateMealResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "messageResponse": {
                    "type": "string"
                }
            }
        },
        "schemas.DeleteMealFromMilkReqRequest": {
            "type": "object",
            "properties": {
                "meal_id": {
                    "type": "integer"
                }
            }
        },
        "schemas.DeleteMealResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "messageResponse": {
                    "type": "string"
                }
            }
        },
        "schemas.GetAllMealsResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "meals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ds.Meals"
                    }
                },
                "milk_req_ID": {
                    "type": "integer"
                }
            }
        },
        "schemas.GetAllMilkRequestsWithParamsResponse": {
            "type": "object",
            "properties": {
                "milkRequests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ds.MilkRequests"
                    }
                }
            }
        },
        "schemas.GetMealResponse": {
            "type": "object",
            "properties": {
                "meal": {
                    "$ref": "#/definitions/ds.Meals"
                }
            }
        },
        "schemas.LoginUserRequest": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "schemas.LogoutUserRequest": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                }
            }
        },
        "schemas.RegisterUserRequest": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "schemas.ResponseMessage": {
            "type": "object"
        },
        "schemas.UpdateAmountMilkReqMealRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "meal_id": {
                    "type": "integer"
                }
            }
        },
        "schemas.UpdateMealRequest": {
            "type": "object",
            "properties": {
                "image_url": {
                    "type": "string"
                },
                "meal_brand": {
                    "type": "string"
                },
                "meal_detail": {
                    "type": "string"
                },
                "meal_info": {
                    "type": "string"
                },
                "meal_weight": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "schemas.UpdateMealResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "messageResponse": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}